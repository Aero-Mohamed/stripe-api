name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: |-
        This endpoint allows a new user to register by providing their details. Upon successful registration,
        a new user account will be created, and the created userâ€™s data will be returned along with a success message.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the user account.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: "The confirmation of the user's password."
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: user@example.com
      password: '123456789'
      password_confirmation: '123456789'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "status_code": 201,
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "user@example.com",
              "registered_at": "2024-09-10T12:34:56.000000Z",
            },
            "message": "Account Created.",
            "errors": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "status_code": 422,
            "data": null,
            "message": "The given data was invalid.",
            "errors": {
              "name": ["The name field is required."],
              "email": ["The email field is required.", "The email must be a valid email address."],
              "password": ["The password field is required.", "The password confirmation does not match."],
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/oauth/token
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: |-
        This endpoint allows a user to log in using their credentials.
        If the login is successful, it returns an authentication token that can be used for subsequent requests.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      grant_type:
        name: grant_type
        description: 'The type of grant being requested.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      client_id:
        name: client_id
        description: 'Client ID issued during registration.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      client_secret:
        name: client_secret
        description: 'Secret for the client ID.'
        required: true
        example: O1Cr5SjPKC0gz2GkeTQmwbXjw76n8e88RhoPWuiN
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      username:
        name: username
        description: "User's email or identifier."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the user account.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      grant_type: password
      client_id: '1'
      client_secret: O1Cr5SjPKC0gz2GkeTQmwbXjw76n8e88RhoPWuiN
      username: user@example.com
      password: '123456789'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "token_type": "Bearer",
           "expires_in": 1296000,
           "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiMjQ5ODQ1NmRmMjYzN2M3ZGZiNzVkYThmYjQyMjY3OTU4NDBhNGY1MGFjZDQyN2ZmZTg5ZWVhMTI1YzViZjdlOTE2NzkwZjExMGYwMmEyM2QiLCJpYXQiOjE3MjYwNzE1MzguNjI1MDk4LCJuYmYiOjE3MjYwNzE1MzguNjI1MTAxLCJleHAiOjE3MjczNjc1MzguMTg0ODY3LCJzdWIiOiI1Iiwic2NvcGVzIjpbXX0.RX3-hbHB16gSl0jbCIq0OcDCzC6FxfDZLctPLCapUPNROskb_4bYq8UU-DfVsIFMqhMu8anX2W4x0ylQqom3tv0TRfDkkYc4rKMba1gM_n81VMV4AZAomFq-tZN5p7w_jhQQzR7T3bOk54OG4pRsZdtgCnx0MIfc2TyA34xtkBePMZ3Ptyj3S8JwESMiv_BY92ZCx2ghMwkxNold-_nSmfZo2WqYXnwiHccZbFNM2w7kDjsiZwiW5-oABDoqKEhDI-Iyxum_DpS_HmgFmRLUrZUADUuvUsy089nQN-vKJy_2Oh7BEJtsA2VQYGkW8reAbAuH0Tm60KrILS-eVMYYXPXT6w6aqPvHL2bEKXNC2Pepmcx7EgqoW_McZ5XxTbb9WRdeFmaYVQniIVJXv8DINhWPRQRVzMko60xqEPVz0E7EmU9JzUKMmxKARJIfBGd1hWHkXzVYJIKQQkXHlnNAwKwFfgyEVdLJacZvsYazjaPnYCDT1Bj2Eq7UsxVAtKI0vA9Wvq8hjFBgfZGuKJyXfkSsImhjYEXcC4CCgLzE9M-h7Y0z40bcmrf37fmfdPAmD1bIxMDwUMaWA0Z0juFcNuvC5jwaZ5LghpgGLebHhAqhofgfT0mkM8rOKnTl8TUgZxI4E1nY2d5CSstHvF7vVBAnL9LdhMfAQm3wBZrXywk",
           "refresh_token": "def502005c31b158e7204a0b9871d4e4c8b6fcc200b7fc9da341818e9817581a068f0b2f488791e373f392217c0f6ef15fbb9a5d49f6667e1a52e95ea65261f14e77c6e56e3794b72c364ba825effd63af6dd25a9ac0fcb2d47fa7b8e7b47fcb00b975ad0ad0aa91cbb8797e65dcef733a91117d4e87ef68c76ae11b0209f9af10d6d4a441417780347a434cdb4adb757bcdb22c656009b9647fa9465296e14adedd7024efb9d9fcc4355c02a942ab393884fa70435782edd2f10cc6bbc80c23c8d54dee35f89f64df7c33312152c3b35ad3486679fcee572668d1c32a5d36202aa533b09a30b151f283a55e5389578ee646375e544a3c8c45bca1275ae6c06a41919ee689f5acb8f8c6d25d555771f5df30137ec81266b5f0d92b1cf67e19b2b639b5f0b382f5afb27220aa9606cd66418240c2b8fc88ee52716f93b414b7be279beabf5fce8aa3530cde5032d5877879e3f7af6b046eb034153c212ee0706fd6"
           }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
          "error": "unsupported_grant_type",
          "error_description": "The authorization grant type is not supported by the authorization server.",
          "hint": "Check that all required parameters have been provided",
          "message": "The authorization grant type is not supported by the authorization server."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "error": "invalid_client",
          "error_description": "Client authentication failed",
          "message": "Client authentication failed"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/oauth/token
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log out'
      description: 'This endpoint allows the authenticated user to log out by revoking their current access token'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
          "success": true,
          "status_code": 200,
          "data": "Logged out successfully.",
          "message": "204",
          "errors": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "success": false,
          "status_code": 401,
          "data": null,
          "message": "Unauthenticated.",
          "errors": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a41kv6DE5ge3hVdZa6cPfb8'
    controller: null
    method: null
    route: null
    custom: []
